
USE [SYMPHONY_HRJ]
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Client_SP_Unmapped_SKU]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Client_SP__Unmapped_SKU]
GO

USE [SYMPHONY_HRJ]
GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Client_SP__Unmapped_SKU]
AS
BEGIN

IF (OBJECT_ID('Client_STATUS_TEMP_Excep') IS NOT NULL)
drop table Client_STATUS_TEMP_Excep;

create table Client_STATUS_TEMP_Excep
(SKU nvarchar(100),
SL nvarchar(100),
Year nvarchar(10),
Month nvarchar(10),
Day nvarchar(10),
INV_Site nvarchar(100),
Inv_Transit nvarchar(100),
Dist_code nvarchar(400),

)

IF (OBJECT_ID('allfilenames') IS NOT NULL)
drop table allfilenames;

IF (OBJECT_ID('bulkact') IS NOT NULL)
drop table bulkact;

CREATE TABLE ALLFILENAMES(WHICHPATH VARCHAR(255),WHICHFILE varchar(255))
CREATE TABLE BULKACT(RAWDATA VARCHAR (8000))
declare @filename varchar(255),
        @path     varchar(255),
        @sql      varchar(8000),
        @cmd      varchar(1000)



SET @path = 'E:\SymphonyData\Status_Exception\'
SET @cmd = 'dir "' + @path + '" *.csv /b'
INSERT INTO  ALLFILENAMES(WHICHFILE)
EXEC Master..xp_cmdShell @cmd
UPDATE ALLFILENAMES SET WHICHPATH = @path where WHICHPATH is null

--cursor loop
    declare c1 cursor for SELECT WHICHPATH,WHICHFILE FROM ALLFILENAMES where WHICHFILE like 'STATUS_site_%.csv%'
    open c1
    fetch next from c1 into @path,@filename
    While @@fetch_status <> -1
      begin
      --bulk insert won't take a variable name, so make a sql and execute it instead:
       set @sql = 'BULK INSERT Client_STATUS_TEMP_Excep FROM ''' + @path + @filename + ''' '
           + '     WITH ( 
                   FIELDTERMINATOR = '','', 
                   ROWTERMINATOR = ''\n'', 
                   FIRSTROW = 2 
                ) '
    print @sql
    exec (@sql)

      fetch next from c1 into @path,@filename
      end
    close c1
    deallocate c1



select sl.stockLocationName,sl.stockLocationDescription, sls.locationSkuName,sls.bufferSize,sls.inventoryAtSite,sls.inventoryAtTransit,sls.inventoryAtProduction from Symphony_StockLocationSkus sls
join Symphony_StockLocations sl on sl.stockLocationID=sls.stockLocationID 

where sl.slPropertyID6=122 and (sls.inventoryAtSite+sls.inventoryAtTransit+sls.inventoryAtProduction)>0  and sl.stockLocationName in (select sl from Client_STATUS_TEMP_Excep)   and sl.stockLocationName + '|' + locationSkuName not in (select sl + '|' + SKU from Client_STATUS_TEMP_Excep)

end